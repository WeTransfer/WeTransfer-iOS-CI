# rubocop:disable LineLength
desc 'Runs tests for an external project'
lane :test_project do |options|
	clear_derived_data

	# Clean old reports so they're not reported for no reason.
	reports_dir = "./../build/reports"
	FileUtils.rm_rf Dir.glob("#{reports_dir}/*") if File.directory?(reports_dir)

	# Set timeout to prevent xcodebuild -list -project to take to much retries.
	ENV["FASTLANE_XCODE_LIST_TIMEOUT"] = "120"

	begin
		ENV["XCPRETTY_JSON_FILE_OUTPUT"] = "build/reports/#{options[:scheme]}_Tests.json"
		source_dir = ENV['BITRISE_SOURCE_DIR'] || '.'
		scan(
		  scheme: options[:scheme],
		  project: "#{source_dir}/#{options[:project_path]}#{options[:project_name]}.xcodeproj",
		  skip_detect_devices: true,
		  destination: "platform=iOS Simulator,OS=13.2.2,name=iPhone 11",
		  code_coverage: true,
		  disable_concurrent_testing: true,
		  fail_build: false,
		  skip_slack: true,
		  output_types: "",
		  include_simulator_logs: true,
		  formatter: "xcpretty-json-formatter",
		  xcargs: "-UseNewBuildSystem=YES",
		  result_bundle: true,
		  output_directory: "build/reports/"
		)
	rescue => ex
		UI.important("Tests failed for #{ex}")
	end
end

desc 'Tests the WeTransferPRLinter Swift Package'
lane :test_pr_linter do |options|
	spm(command: "generate-xcodeproj", package_path: "Danger-Swift")
	test_project(project_path: "Danger-Swift/", project: "WeTransferPRLinter", scheme: "WeTransferPRLinter-Package")
end
